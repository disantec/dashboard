#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_verdana_87_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0066,  3 },  // (First char = [0x0066, f], Second char = [0x0022, "], Kerning dist = 3)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0027, '], Kerning dist = -5)
    { 0x0066,  3 },  // (First char = [0x0066, f], Second char = [0x0027, '], Kerning dist = 3)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x0029, )], Kerning dist = 4)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x002A, *], Kerning dist = 2)
    { 0x002E, -6 },  // (First char = [0x002E, .], Second char = [0x002C, ,], Kerning dist = -6)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x002C, ,], Kerning dist = -2)
    { 0x0046, -13 },  // (First char = [0x0046, F], Second char = [0x002C, ,], Kerning dist = -13)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0050, -13 },  // (First char = [0x0050, P], Second char = [0x002C, ,], Kerning dist = -13)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x002C, ,], Kerning dist = -12)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x002C, ,], Kerning dist = -12)
    { 0x0057, -12 },  // (First char = [0x0057, W], Second char = [0x002C, ,], Kerning dist = -12)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x002C, ,], Kerning dist = -12)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0066, -6 },  // (First char = [0x0066, f], Second char = [0x002C, ,], Kerning dist = -6)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0072, -12 },  // (First char = [0x0072, r], Second char = [0x002C, ,], Kerning dist = -12)
    { 0x0076, -8 },  // (First char = [0x0076, v], Second char = [0x002C, ,], Kerning dist = -8)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x002C, ,], Kerning dist = -3)
    { 0x0079, -8 },  // (First char = [0x0079, y], Second char = [0x002C, ,], Kerning dist = -8)
    { 0x00D8, -1 },  // (First char = [0x00D8, ], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x00F8, -1 },  // (First char = [0x00F8, ], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x2019, -9 },  // (First char = [0x2019, ], Second char = [0x002C, ,], Kerning dist = -9)
    { 0x201D, -9 },  // (First char = [0x201D, ], Second char = [0x002C, ,], Kerning dist = -9)
    { 0x002E, -7 },  // (First char = [0x002E, .], Second char = [0x002D, -], Kerning dist = -7)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x002D, -], Kerning dist = -1)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x002D, -], Kerning dist = -5)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x002D, -], Kerning dist = -7)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x002D, -], Kerning dist = -4)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x002D, -], Kerning dist = -6)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x002D, -], Kerning dist = -3)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x002D, -], Kerning dist = -6)
    { 0x005A, -3 },  // (First char = [0x005A, Z], Second char = [0x002D, -], Kerning dist = -3)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x002D, -], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x002D, -], Kerning dist = -2)
    { 0x006B, -4 },  // (First char = [0x006B, k], Second char = [0x002D, -], Kerning dist = -4)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002D, -], Kerning dist = -1)
    { 0x0074, -2 },  // (First char = [0x0074, t], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x002D, -], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x002D, -], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x002D, -], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x002D, -], Kerning dist = -1)
    { 0x00C7, -2 },  // (First char = [0x00C7, ], Second char = [0x002D, -], Kerning dist = -2)
    { 0x00E7, -1 },  // (First char = [0x00E7, ], Second char = [0x002D, -], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x002E, .], Kerning dist = -2)
    { 0x0046, -13 },  // (First char = [0x0046, F], Second char = [0x002E, .], Kerning dist = -13)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002E, .], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0050, -13 },  // (First char = [0x0050, P], Second char = [0x002E, .], Kerning dist = -13)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x002E, .], Kerning dist = -12)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x002E, .], Kerning dist = -12)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x002E, .], Kerning dist = -12)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0066, -5 },  // (First char = [0x0066, f], Second char = [0x002E, .], Kerning dist = -5)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0072, -12 },  // (First char = [0x0072, r], Second char = [0x002E, .], Kerning dist = -12)
    { 0x0076, -8 },  // (First char = [0x0076, v], Second char = [0x002E, .], Kerning dist = -8)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x002E, .], Kerning dist = -3)
    { 0x0079, -8 },  // (First char = [0x0079, y], Second char = [0x002E, .], Kerning dist = -8)
    { 0x00D8, -1 },  // (First char = [0x00D8, ], Second char = [0x002E, .], Kerning dist = -1)
    { 0x00F8, -1 },  // (First char = [0x00F8, ], Second char = [0x002E, .], Kerning dist = -1)
    { 0x2019, -9 },  // (First char = [0x2019, ], Second char = [0x002E, .], Kerning dist = -9)
    { 0x201D, -9 },  // (First char = [0x201D, ], Second char = [0x002E, .], Kerning dist = -9)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x003A, :], Kerning dist = -3)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x003A, :], Kerning dist = -8)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x003A, :], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x003A, :], Kerning dist = -3)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x003A, :], Kerning dist = -8)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x003B, ;], Kerning dist = -3)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x003B, ;], Kerning dist = -8)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x003B, ;], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x003B, ;], Kerning dist = -3)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x003B, ;], Kerning dist = -8)
    { 0x0046,  3 },  // (First char = [0x0046, F], Second char = [0x003F, ?], Kerning dist = 3)
    { 0x0054,  3 },  // (First char = [0x0054, T], Second char = [0x003F, ?], Kerning dist = 3)
    { 0x0066,  5 },  // (First char = [0x0066, f], Second char = [0x003F, ?], Kerning dist = 5)
    { 0x0027, -4 },  // (First char = [0x0027, '], Second char = [0x0041, A], Kerning dist = -4)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -4)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -5 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -5)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -3)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -3)
    { 0x00AD, -2 },  // (First char = [0x00AD, ], Second char = [0x0041, A], Kerning dist = -2)
    { 0x2013, -2 },  // (First char = [0x2013, ], Second char = [0x0041, A], Kerning dist = -2)
    { 0x2014, -2 },  // (First char = [0x2014, ], Second char = [0x0041, A], Kerning dist = -2)
    { 0x2018, -4 },  // (First char = [0x2018, ], Second char = [0x0041, A], Kerning dist = -4)
    { 0x2019, -4 },  // (First char = [0x2019, ], Second char = [0x0041, A], Kerning dist = -4)
    { 0x201C, -4 },  // (First char = [0x201C, ], Second char = [0x0041, A], Kerning dist = -4)
    { 0x201D, -4 },  // (First char = [0x201D, ], Second char = [0x0041, A], Kerning dist = -4)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0043, C], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0047, G], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x0049, I], Kerning dist = -1)
    { 0x00AD, -1 },  // (First char = [0x00AD, ], Second char = [0x0049, I], Kerning dist = -1)
    { 0x2013, -1 },  // (First char = [0x2013, ], Second char = [0x0049, I], Kerning dist = -1)
    { 0x2014, -1 },  // (First char = [0x2014, ], Second char = [0x0049, I], Kerning dist = -1)
    { 0x002D, -4 },  // (First char = [0x002D, -], Second char = [0x004A, J], Kerning dist = -4)
    { 0x004C,  4 },  // (First char = [0x004C, L], Second char = [0x004A, J], Kerning dist = 4)
    { 0x00AD, -4 },  // (First char = [0x00AD, ], Second char = [0x004A, J], Kerning dist = -4)
    { 0x2013, -4 },  // (First char = [0x2013, ], Second char = [0x004A, J], Kerning dist = -4)
    { 0x2014, -4 },  // (First char = [0x2014, ], Second char = [0x004A, J], Kerning dist = -4)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x004F, O], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x004F, O], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0053, S], Kerning dist = -1)
    { 0x00AD, -1 },  // (First char = [0x00AD, ], Second char = [0x0053, S], Kerning dist = -1)
    { 0x2013, -1 },  // (First char = [0x2013, ], Second char = [0x0053, S], Kerning dist = -1)
    { 0x2014, -1 },  // (First char = [0x2014, ], Second char = [0x0053, S], Kerning dist = -1)
    { 0x002D, -6 },  // (First char = [0x002D, -], Second char = [0x0054, T], Kerning dist = -6)
    { 0x0041, -5 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -5)
    { 0x0042, -3 },  // (First char = [0x0042, B], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0046,  1 },  // (First char = [0x0046, F], Second char = [0x0054, T], Kerning dist = 1)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -7)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0054, -3 },  // (First char = [0x0054, T], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0063, -3 },  // (First char = [0x0063, c], Second char = [0x0054, T], Kerning dist = -3)
    { 0x0065, -6 },  // (First char = [0x0065, e], Second char = [0x0054, T], Kerning dist = -6)
    { 0x00AD, -6 },  // (First char = [0x00AD, ], Second char = [0x0054, T], Kerning dist = -6)
    { 0x00D8, -2 },  // (First char = [0x00D8, ], Second char = [0x0054, T], Kerning dist = -2)
    { 0x2013, -6 },  // (First char = [0x2013, ], Second char = [0x0054, T], Kerning dist = -6)
    { 0x2014, -6 },  // (First char = [0x2014, ], Second char = [0x0054, T], Kerning dist = -6)
    { 0x2019,  5 },  // (First char = [0x2019, ], Second char = [0x0054, T], Kerning dist = 5)
    { 0x201A, -9 },  // (First char = [0x201A, ], Second char = [0x0054, T], Kerning dist = -9)
    { 0x201D,  5 },  // (First char = [0x201D, ], Second char = [0x0054, T], Kerning dist = 5)
    { 0x201E, -9 },  // (First char = [0x201E, ], Second char = [0x0054, T], Kerning dist = -9)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -3)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -5)
    { 0x00AD, -2 },  // (First char = [0x00AD, ], Second char = [0x0056, V], Kerning dist = -2)
    { 0x2013, -2 },  // (First char = [0x2013, ], Second char = [0x0056, V], Kerning dist = -2)
    { 0x2014, -2 },  // (First char = [0x2014, ], Second char = [0x0056, V], Kerning dist = -2)
    { 0x2019,  4 },  // (First char = [0x2019, ], Second char = [0x0056, V], Kerning dist = 4)
    { 0x201A, -9 },  // (First char = [0x201A, ], Second char = [0x0056, V], Kerning dist = -9)
    { 0x201D,  4 },  // (First char = [0x201D, ], Second char = [0x0056, V], Kerning dist = 4)
    { 0x201E, -9 },  // (First char = [0x201E, ], Second char = [0x0056, V], Kerning dist = -9)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -4)
    { 0x00AD, -2 },  // (First char = [0x00AD, ], Second char = [0x0057, W], Kerning dist = -2)
    { 0x2013, -2 },  // (First char = [0x2013, ], Second char = [0x0057, W], Kerning dist = -2)
    { 0x2014, -2 },  // (First char = [0x2014, ], Second char = [0x0057, W], Kerning dist = -2)
    { 0x2019,  3 },  // (First char = [0x2019, ], Second char = [0x0057, W], Kerning dist = 3)
    { 0x201A, -4 },  // (First char = [0x201A, ], Second char = [0x0057, W], Kerning dist = -4)
    { 0x201D,  3 },  // (First char = [0x201D, ], Second char = [0x0057, W], Kerning dist = 3)
    { 0x201E, -4 },  // (First char = [0x201E, ], Second char = [0x0057, W], Kerning dist = -4)
    { 0x002D, -3 },  // (First char = [0x002D, -], Second char = [0x0058, X], Kerning dist = -3)
    { 0x00AD, -3 },  // (First char = [0x00AD, ], Second char = [0x0058, X], Kerning dist = -3)
    { 0x2013, -3 },  // (First char = [0x2013, ], Second char = [0x0058, X], Kerning dist = -3)
    { 0x2014, -3 },  // (First char = [0x2014, ], Second char = [0x0058, X], Kerning dist = -3)
    { 0x002D, -6 },  // (First char = [0x002D, -], Second char = [0x0059, Y], Kerning dist = -6)
    { 0x0041, -3 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -3)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -7)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0050,  1 },  // (First char = [0x0050, P], Second char = [0x0059, Y], Kerning dist = 1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x00AD, -6 },  // (First char = [0x00AD, ], Second char = [0x0059, Y], Kerning dist = -6)
    { 0x00D8, -1 },  // (First char = [0x00D8, ], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x2013, -6 },  // (First char = [0x2013, ], Second char = [0x0059, Y], Kerning dist = -6)
    { 0x2014, -6 },  // (First char = [0x2014, ], Second char = [0x0059, Y], Kerning dist = -6)
    { 0x2019,  5 },  // (First char = [0x2019, ], Second char = [0x0059, Y], Kerning dist = 5)
    { 0x201A, -9 },  // (First char = [0x201A, ], Second char = [0x0059, Y], Kerning dist = -9)
    { 0x201D,  5 },  // (First char = [0x201D, ], Second char = [0x0059, Y], Kerning dist = 5)
    { 0x201E, -9 },  // (First char = [0x201E, ], Second char = [0x0059, Y], Kerning dist = -9)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00AD, -1 },  // (First char = [0x00AD, ], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x00D8, -1 },  // (First char = [0x00D8, ], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x005C, \], Kerning dist = 4)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x005D, ]], Kerning dist = 4)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -4)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0061, a], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0054, -10 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -10)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -4)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -6)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x0061, a], Kerning dist = -2)
    { 0x00AD, -1 },  // (First char = [0x00AD, ], Second char = [0x0061, a], Kerning dist = -1)
    { 0x2013, -1 },  // (First char = [0x2013, ], Second char = [0x0061, a], Kerning dist = -1)
    { 0x2014, -1 },  // (First char = [0x2014, ], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -9)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -5)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0065, e], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -9)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0065, e], Kerning dist = -4)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0065, e], Kerning dist = -3)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -6)
    { 0x005A, -3 },  // (First char = [0x005A, Z], Second char = [0x0065, e], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0065, e], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -9)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -6)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x006D, m], Kerning dist = -4)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x006E, n], Kerning dist = -4)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -9)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x006F, o], Kerning dist = -4)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x006F, o], Kerning dist = -3)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -6)
    { 0x005A, -3 },  // (First char = [0x005A, Z], Second char = [0x006F, o], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x006F, o], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -4)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -6)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -8)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0072, r], Kerning dist = -3)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0072, r], Kerning dist = -4)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -8)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -5)
    { 0x2019, -3 },  // (First char = [0x2019, ], Second char = [0x0073, s], Kerning dist = -3)
    { 0x201D, -3 },  // (First char = [0x201D, ], Second char = [0x0073, s], Kerning dist = -3)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0074, t], Kerning dist = -1)
    { 0x2019,  2 },  // (First char = [0x2019, ], Second char = [0x0074, t], Kerning dist = 2)
    { 0x201D,  2 },  // (First char = [0x201D, ], Second char = [0x0074, t], Kerning dist = 2)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0075, u], Kerning dist = -2)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -8)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0075, u], Kerning dist = -3)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0059, -5 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -5)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -3)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -5)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -8)
    { 0x0059, -4 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -4)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0076, v], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0076, v], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0076, v], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0076, v], Kerning dist = -1)
    { 0x00AD, -2 },  // (First char = [0x00AD, ], Second char = [0x0076, v], Kerning dist = -2)
    { 0x00F8, -1 },  // (First char = [0x00F8, ], Second char = [0x0076, v], Kerning dist = -1)
    { 0x2013, -2 },  // (First char = [0x2013, ], Second char = [0x0076, v], Kerning dist = -2)
    { 0x2014, -2 },  // (First char = [0x2014, ], Second char = [0x0076, v], Kerning dist = -2)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0077, w], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0077, w], Kerning dist = -3)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -8)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x0077, w], Kerning dist = -2)
    { 0x00AD, -1 },  // (First char = [0x00AD, ], Second char = [0x0077, w], Kerning dist = -1)
    { 0x2013, -1 },  // (First char = [0x2013, ], Second char = [0x0077, w], Kerning dist = -1)
    { 0x2014, -1 },  // (First char = [0x2014, ], Second char = [0x0077, w], Kerning dist = -1)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0078, x], Kerning dist = -2)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -1)
    { 0x00AD, -2 },  // (First char = [0x00AD, ], Second char = [0x0078, x], Kerning dist = -2)
    { 0x00F8, -1 },  // (First char = [0x00F8, ], Second char = [0x0078, x], Kerning dist = -1)
    { 0x2013, -2 },  // (First char = [0x2013, ], Second char = [0x0078, x], Kerning dist = -2)
    { 0x2014, -2 },  // (First char = [0x2014, ], Second char = [0x0078, x], Kerning dist = -2)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -3)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -5)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -8)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0079, y], Kerning dist = -3)
    { 0x005A, -3 },  // (First char = [0x005A, Z], Second char = [0x0079, y], Kerning dist = -3)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0079, y], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0079, y], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0079, y], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0079, y], Kerning dist = -1)
    { 0x00AD, -2 },  // (First char = [0x00AD, ], Second char = [0x0079, y], Kerning dist = -2)
    { 0x00F8, -1 },  // (First char = [0x00F8, ], Second char = [0x0079, y], Kerning dist = -1)
    { 0x2013, -2 },  // (First char = [0x2013, ], Second char = [0x0079, y], Kerning dist = -2)
    { 0x2014, -2 },  // (First char = [0x2014, ], Second char = [0x0079, y], Kerning dist = -2)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0054, -7 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -7)
    { 0x00AD, -2 },  // (First char = [0x00AD, ], Second char = [0x007A, z], Kerning dist = -2)
    { 0x2013, -2 },  // (First char = [0x2013, ], Second char = [0x007A, z], Kerning dist = -2)
    { 0x2014, -2 },  // (First char = [0x2014, ], Second char = [0x007A, z], Kerning dist = -2)
    { 0x0066,  4 },  // (First char = [0x0066, f], Second char = [0x007D, }], Kerning dist = 4)
    { 0x002E, -7 },  // (First char = [0x002E, .], Second char = [0x00AD, ], Kerning dist = -7)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x00AD, ], Kerning dist = -1)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x00AD, ], Kerning dist = -5)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x00AD, ], Kerning dist = -7)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x00AD, ], Kerning dist = -4)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x00AD, ], Kerning dist = -6)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x00AD, ], Kerning dist = -3)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x00AD, ], Kerning dist = -6)
    { 0x005A, -3 },  // (First char = [0x005A, Z], Second char = [0x00AD, ], Kerning dist = -3)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x00AD, ], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x006B, -4 },  // (First char = [0x006B, k], Second char = [0x00AD, ], Kerning dist = -4)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x00AD, ], Kerning dist = -1)
    { 0x0074, -2 },  // (First char = [0x0074, t], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x00AD, ], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x00AD, ], Kerning dist = -1)
    { 0x00C7, -2 },  // (First char = [0x00C7, ], Second char = [0x00AD, ], Kerning dist = -2)
    { 0x00E7, -1 },  // (First char = [0x00E7, ], Second char = [0x00AD, ], Kerning dist = -1)
    { 0x0027, -4 },  // (First char = [0x0027, '], Second char = [0x00C6, ], Kerning dist = -4)
    { 0x002D, -2 },  // (First char = [0x002D, -], Second char = [0x00C6, ], Kerning dist = -2)
    { 0x0046, -5 },  // (First char = [0x0046, F], Second char = [0x00C6, ], Kerning dist = -5)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x00C6, ], Kerning dist = -3)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x00C6, ], Kerning dist = -1)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x00C6, ], Kerning dist = -6)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x00C6, ], Kerning dist = -1)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x00C6, ], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x00C6, ], Kerning dist = -3)
    { 0x0059, -3 },  // (First char = [0x0059, Y], Second char = [0x00C6, ], Kerning dist = -3)
    { 0x00AD, -2 },  // (First char = [0x00AD, ], Second char = [0x00C6, ], Kerning dist = -2)
    { 0x2013, -2 },  // (First char = [0x2013, ], Second char = [0x00C6, ], Kerning dist = -2)
    { 0x2014, -2 },  // (First char = [0x2014, ], Second char = [0x00C6, ], Kerning dist = -2)
    { 0x2018, -4 },  // (First char = [0x2018, ], Second char = [0x00C6, ], Kerning dist = -4)
    { 0x2019, -4 },  // (First char = [0x2019, ], Second char = [0x00C6, ], Kerning dist = -4)
    { 0x201C, -4 },  // (First char = [0x201C, ], Second char = [0x00C6, ], Kerning dist = -4)
    { 0x201D, -4 },  // (First char = [0x201D, ], Second char = [0x00C6, ], Kerning dist = -4)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00C7, ], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C7, ], Kerning dist = -2)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00C7, ], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00D8, ], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D8, ], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00D8, ], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00D8, ], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x00D8, ], Kerning dist = -1)
    { 0x002D, -1 },  // (First char = [0x002D, -], Second char = [0x00E6, ], Kerning dist = -1)
    { 0x0046, -4 },  // (First char = [0x0046, F], Second char = [0x00E6, ], Kerning dist = -4)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x00E6, ], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00E6, ], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x00E6, ], Kerning dist = -2)
    { 0x0054, -10 },  // (First char = [0x0054, T], Second char = [0x00E6, ], Kerning dist = -10)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x00E6, ], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x00E6, ], Kerning dist = -4)
    { 0x0058, -2 },  // (First char = [0x0058, X], Second char = [0x00E6, ], Kerning dist = -2)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x00E6, ], Kerning dist = -6)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x00E6, ], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x00E6, ], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x00E6, ], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x00E6, ], Kerning dist = -1)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x00E6, ], Kerning dist = -2)
    { 0x00AD, -1 },  // (First char = [0x00AD, ], Second char = [0x00E6, ], Kerning dist = -1)
    { 0x2013, -1 },  // (First char = [0x2013, ], Second char = [0x00E6, ], Kerning dist = -1)
    { 0x2014, -1 },  // (First char = [0x2014, ], Second char = [0x00E6, ], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00E7, ], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x00E7, ], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00F8, ], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x00F8, ], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00F8, ], Kerning dist = -2)
    { 0x0052, -2 },  // (First char = [0x0052, R], Second char = [0x00F8, ], Kerning dist = -2)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x00F8, ], Kerning dist = -9)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x00F8, ], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x00F8, ], Kerning dist = -4)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x00F8, ], Kerning dist = -3)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x00F8, ], Kerning dist = -6)
    { 0x005A, -3 },  // (First char = [0x005A, Z], Second char = [0x00F8, ], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x00F8, ], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x00F8, ], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x00F8, ], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x00F8, ], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x00F8, ], Kerning dist = -1)
    { 0x0043, -1 },  // (First char = [0x0043, C], Second char = [0x0152, ], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0152, ], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0152, ], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0152, ], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0152, ], Kerning dist = -1)
    { 0x005A, -1 },  // (First char = [0x005A, Z], Second char = [0x0152, ], Kerning dist = -1)
    { 0x00C7, -1 },  // (First char = [0x00C7, ], Second char = [0x0152, ], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0153, ], Kerning dist = -2)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0153, ], Kerning dist = -3)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0153, ], Kerning dist = -2)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x0153, ], Kerning dist = -3)
    { 0x0054, -9 },  // (First char = [0x0054, T], Second char = [0x0153, ], Kerning dist = -9)
    { 0x0056, -4 },  // (First char = [0x0056, V], Second char = [0x0153, ], Kerning dist = -4)
    { 0x0057, -4 },  // (First char = [0x0057, W], Second char = [0x0153, ], Kerning dist = -4)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x0153, ], Kerning dist = -3)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x0153, ], Kerning dist = -6)
    { 0x005A, -3 },  // (First char = [0x005A, Z], Second char = [0x0153, ], Kerning dist = -3)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0153, ], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0153, ], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0153, ], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0153, ], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x037E, ], Kerning dist = -3)
    { 0x0054, -8 },  // (First char = [0x0054, T], Second char = [0x037E, ], Kerning dist = -8)
    { 0x0056, -3 },  // (First char = [0x0056, V], Second char = [0x037E, ], Kerning dist = -3)
    { 0x0057, -3 },  // (First char = [0x0057, W], Second char = [0x037E, ], Kerning dist = -3)
    { 0x0059, -8 },  // (First char = [0x0059, Y], Second char = [0x037E, ], Kerning dist = -8)
    { 0x0531, -4 },  // (First char = [0x0531, ], Second char = [0x0533, ], Kerning dist = -4)
    { 0x0546, -5 },  // (First char = [0x0546, ], Second char = [0x0533, ], Kerning dist = -5)
    { 0x0546, -18 },  // (First char = [0x0546, ], Second char = [0x0534, ], Kerning dist = -18)
    { 0x0546, -3 },  // (First char = [0x0546, ], Second char = [0x0536, ], Kerning dist = -3)
    { 0x0546, -2 },  // (First char = [0x0546, ], Second char = [0x053A, ], Kerning dist = -2)
    { 0x0546, -2 },  // (First char = [0x0546, ], Second char = [0x053E, ], Kerning dist = -2)
    { 0x0546, -5 },  // (First char = [0x0546, ], Second char = [0x053F, ], Kerning dist = -5)
    { 0x0546, -7 },  // (First char = [0x0546, ], Second char = [0x0540, ], Kerning dist = -7)
    { 0x0546, -2 },  // (First char = [0x0546, ], Second char = [0x0541, ], Kerning dist = -2)
    { 0x0531, -4 },  // (First char = [0x0531, ], Second char = [0x0542, ], Kerning dist = -4)
    { 0x0546, -17 },  // (First char = [0x0546, ], Second char = [0x0542, ], Kerning dist = -17)
    { 0x0546, -1 },  // (First char = [0x0546, ], Second char = [0x0543, ], Kerning dist = -1)
    { 0x0546, -4 },  // (First char = [0x0546, ], Second char = [0x0545, ], Kerning dist = -4)
    { 0x0546, -2 },  // (First char = [0x0546, ], Second char = [0x0547, ], Kerning dist = -2)
    { 0x0546, -3 },  // (First char = [0x0546, ], Second char = [0x0549, ], Kerning dist = -3)
    { 0x0546, -17 },  // (First char = [0x0546, ], Second char = [0x054A, ], Kerning dist = -17)
    { 0x0546, -3 },  // (First char = [0x0546, ], Second char = [0x054B, ], Kerning dist = -3)
    { 0x0546, -6 },  // (First char = [0x0546, ], Second char = [0x054E, ], Kerning dist = -6)
    { 0x054F, -1 },  // (First char = [0x054F, ], Second char = [0x054F, ], Kerning dist = -1)
    { 0x055A,  1 },  // (First char = [0x055A, ], Second char = [0x054F, ], Kerning dist = 1)
    { 0x0546, -1 },  // (First char = [0x0546, ], Second char = [0x0551, ], Kerning dist = -1)
    { 0x0546, -2 },  // (First char = [0x0546, ], Second char = [0x0553, ], Kerning dist = -2)
    { 0x0546, -2 },  // (First char = [0x0546, ], Second char = [0x0556, ], Kerning dist = -2)
    { 0x0544,  5 },  // (First char = [0x0544, ], Second char = [0x055D, ], Kerning dist = 5)
    { 0x055A,  8 },  // (First char = [0x055A, ], Second char = [0x055D, ], Kerning dist = 8)
    { 0x0574,  5 },  // (First char = [0x0574, ], Second char = [0x055D, ], Kerning dist = 5)
    { 0x055A,  2 },  // (First char = [0x055A, ], Second char = [0x0570, ], Kerning dist = 2)
    { 0x0563,  2 },  // (First char = [0x0563, ], Second char = [0x0575, ], Kerning dist = 2)
    { 0x0564,  2 },  // (First char = [0x0564, ], Second char = [0x0575, ], Kerning dist = 2)
    { 0x0566, 10 },  // (First char = [0x0566, ], Second char = [0x0575, ], Kerning dist = 10)
    { 0x0568,  4 },  // (First char = [0x0568, ], Second char = [0x0575, ], Kerning dist = 4)
    { 0x056C, 13 },  // (First char = [0x056C, ], Second char = [0x0575, ], Kerning dist = 13)
    { 0x056F,  4 },  // (First char = [0x056F, ], Second char = [0x0575, ], Kerning dist = 4)
    { 0x0572, 11 },  // (First char = [0x0572, ], Second char = [0x0575, ], Kerning dist = 11)
    { 0x0577,  6 },  // (First char = [0x0577, ], Second char = [0x0575, ], Kerning dist = 6)
    { 0x0579,  8 },  // (First char = [0x0579, ], Second char = [0x0575, ], Kerning dist = 8)
    { 0x057A,  3 },  // (First char = [0x057A, ], Second char = [0x0575, ], Kerning dist = 3)
    { 0x057B,  6 },  // (First char = [0x057B, ], Second char = [0x0575, ], Kerning dist = 6)
    { 0x057E, 11 },  // (First char = [0x057E, ], Second char = [0x0575, ], Kerning dist = 11)
    { 0x0574,  3 },  // (First char = [0x0574, ], Second char = [0x0576, ], Kerning dist = 3)
    { 0x002E, -5 },  // (First char = [0x002E, .], Second char = [0x2013, ], Kerning dist = -5)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x2013, ], Kerning dist = -2)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x2013, ], Kerning dist = -2)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x2013, ], Kerning dist = -1)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x2013, ], Kerning dist = -5)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x2013, ], Kerning dist = -7)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x2013, ], Kerning dist = -4)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x2013, ], Kerning dist = -6)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x2013, ], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x2013, ], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x2013, ], Kerning dist = -3)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x2013, ], Kerning dist = -6)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x2013, ], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x2013, ], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x2013, ], Kerning dist = -2)
    { 0x006B, -4 },  // (First char = [0x006B, k], Second char = [0x2013, ], Kerning dist = -4)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x2013, ], Kerning dist = -1)
    { 0x0074, -2 },  // (First char = [0x0074, t], Second char = [0x2013, ], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x2013, ], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x2013, ], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x2013, ], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x2013, ], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x2013, ], Kerning dist = -1)
    { 0x00C7, -2 },  // (First char = [0x00C7, ], Second char = [0x2013, ], Kerning dist = -2)
    { 0x00E7, -1 },  // (First char = [0x00E7, ], Second char = [0x2013, ], Kerning dist = -1)
    { 0x002E, -5 },  // (First char = [0x002E, .], Second char = [0x2014, ], Kerning dist = -5)
    { 0x003A, -6 },  // (First char = [0x003A, :], Second char = [0x2014, ], Kerning dist = -6)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x2014, ], Kerning dist = -2)
    { 0x0043, -2 },  // (First char = [0x0043, C], Second char = [0x2014, ], Kerning dist = -2)
    { 0x0049, -1 },  // (First char = [0x0049, I], Second char = [0x2014, ], Kerning dist = -1)
    { 0x004B, -5 },  // (First char = [0x004B, K], Second char = [0x2014, ], Kerning dist = -5)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x2014, ], Kerning dist = -7)
    { 0x0052, -4 },  // (First char = [0x0052, R], Second char = [0x2014, ], Kerning dist = -4)
    { 0x0054, -6 },  // (First char = [0x0054, T], Second char = [0x2014, ], Kerning dist = -6)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x2014, ], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x2014, ], Kerning dist = -2)
    { 0x0058, -3 },  // (First char = [0x0058, X], Second char = [0x2014, ], Kerning dist = -3)
    { 0x0059, -6 },  // (First char = [0x0059, Y], Second char = [0x2014, ], Kerning dist = -6)
    { 0x005A, -2 },  // (First char = [0x005A, Z], Second char = [0x2014, ], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x2014, ], Kerning dist = -1)
    { 0x0066, -2 },  // (First char = [0x0066, f], Second char = [0x2014, ], Kerning dist = -2)
    { 0x006B, -4 },  // (First char = [0x006B, k], Second char = [0x2014, ], Kerning dist = -4)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x2014, ], Kerning dist = -1)
    { 0x0074, -2 },  // (First char = [0x0074, t], Second char = [0x2014, ], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x2014, ], Kerning dist = -2)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x2014, ], Kerning dist = -1)
    { 0x0078, -2 },  // (First char = [0x0078, x], Second char = [0x2014, ], Kerning dist = -2)
    { 0x0079, -2 },  // (First char = [0x0079, y], Second char = [0x2014, ], Kerning dist = -2)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x2014, ], Kerning dist = -1)
    { 0x00C7, -2 },  // (First char = [0x00C7, ], Second char = [0x2014, ], Kerning dist = -2)
    { 0x00E7, -1 },  // (First char = [0x00E7, ], Second char = [0x2014, ], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x2018, ], Kerning dist = -2)
    { 0x0021, -4 },  // (First char = [0x0021, !], Second char = [0x2019, ], Kerning dist = -4)
    { 0x002C, -9 },  // (First char = [0x002C, ,], Second char = [0x2019, ], Kerning dist = -9)
    { 0x002E, -9 },  // (First char = [0x002E, .], Second char = [0x2019, ], Kerning dist = -9)
    { 0x0041, -5 },  // (First char = [0x0041, A], Second char = [0x2019, ], Kerning dist = -5)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x2019, ], Kerning dist = -7)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x2019, ], Kerning dist = -3)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x2019, ], Kerning dist = 2)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x2019, ], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, t], Second char = [0x2019, ], Kerning dist = 1)
    { 0x2026, -9 },  // (First char = [0x2026, ], Second char = [0x2019, ], Kerning dist = -9)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x201C, ], Kerning dist = -2)
    { 0x0021, -4 },  // (First char = [0x0021, !], Second char = [0x201D, ], Kerning dist = -4)
    { 0x002C, -9 },  // (First char = [0x002C, ,], Second char = [0x201D, ], Kerning dist = -9)
    { 0x002E, -9 },  // (First char = [0x002E, .], Second char = [0x201D, ], Kerning dist = -9)
    { 0x0041, -5 },  // (First char = [0x0041, A], Second char = [0x201D, ], Kerning dist = -5)
    { 0x004C, -7 },  // (First char = [0x004C, L], Second char = [0x201D, ], Kerning dist = -7)
    { 0x0052, -3 },  // (First char = [0x0052, R], Second char = [0x201D, ], Kerning dist = -3)
    { 0x0066,  2 },  // (First char = [0x0066, f], Second char = [0x201D, ], Kerning dist = 2)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x201D, ], Kerning dist = 1)
    { 0x0074,  1 },  // (First char = [0x0074, t], Second char = [0x201D, ], Kerning dist = 1)
    { 0x2026, -9 },  // (First char = [0x2026, ], Second char = [0x201D, ], Kerning dist = -9)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x2026, ], Kerning dist = -1)
    { 0x0044, -2 },  // (First char = [0x0044, D], Second char = [0x2026, ], Kerning dist = -2)
    { 0x0046, -13 },  // (First char = [0x0046, F], Second char = [0x2026, ], Kerning dist = -13)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x2026, ], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x2026, ], Kerning dist = -1)
    { 0x0050, -13 },  // (First char = [0x0050, P], Second char = [0x2026, ], Kerning dist = -13)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x2026, ], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x2026, ], Kerning dist = -1)
    { 0x0054, -12 },  // (First char = [0x0054, T], Second char = [0x2026, ], Kerning dist = -12)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x2026, ], Kerning dist = -1)
    { 0x0056, -12 },  // (First char = [0x0056, V], Second char = [0x2026, ], Kerning dist = -12)
    { 0x0057, -9 },  // (First char = [0x0057, W], Second char = [0x2026, ], Kerning dist = -9)
    { 0x0059, -12 },  // (First char = [0x0059, Y], Second char = [0x2026, ], Kerning dist = -12)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x2026, ], Kerning dist = -1)
    { 0x0066, -5 },  // (First char = [0x0066, f], Second char = [0x2026, ], Kerning dist = -5)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x2026, ], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x2026, ], Kerning dist = -1)
    { 0x0072, -12 },  // (First char = [0x0072, r], Second char = [0x2026, ], Kerning dist = -12)
    { 0x0076, -8 },  // (First char = [0x0076, v], Second char = [0x2026, ], Kerning dist = -8)
    { 0x0077, -3 },  // (First char = [0x0077, w], Second char = [0x2026, ], Kerning dist = -3)
    { 0x0079, -8 },  // (First char = [0x0079, y], Second char = [0x2026, ], Kerning dist = -8)
    { 0x00D8, -1 },  // (First char = [0x00D8, ], Second char = [0x2026, ], Kerning dist = -1)
    { 0x00F8, -1 },  // (First char = [0x00F8, ], Second char = [0x2026, ], Kerning dist = -1)
    { 0x2019, -9 },  // (First char = [0x2019, ], Second char = [0x2026, ], Kerning dist = -9)
    { 0x201D, -9 },  // (First char = [0x201D, ], Second char = [0x2026, ], Kerning dist = -9)
};
